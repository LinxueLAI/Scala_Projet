package projectEuler.exercices

import java.util.Date
import scala.collection.mutable
import scala.collection.mutable.ArrayBuffer

object Problem45 {
  /*
    Problem 45 : Triangular, pentagonal, and hexagonal
    Description :

      Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:
      Triangle 	  	Tn=n(n+1)/2 	  	1, 3, 6, 10, 15, ...
      Pentagonal 	  	Pn=n(3n−1)/2 	  	1, 5, 12, 22, 35, ...
      Hexagonal 	  	Hn=n(2n−1) 	  	1, 6, 15, 28, 45, ...

      It can be verified that T285 = P165 = H143 = 40755.

      Find the next triangle number that is also pentagonal and hexagonal.

ArrayBuffer :
ParArray(1, 40755, 1533776805)
time used  = 33404

HashSet:
1533776805
time used  = 647

  */

  def main(args: Array[String]): Unit = {
    val startTime = new Date().getTime

    val arrayTriangle = ArrayBuffer[BigInt]()
    val arrayPentagonal = mutable.HashSet[BigInt]()
    val arrayHexagonal = mutable.HashSet[BigInt]()

    (BigInt(1) to BigInt(100000)).foreach{n=>
      arrayTriangle.append(n*(n+1)/2)
      arrayPentagonal.add(n*(3*n-1)/2)
      arrayHexagonal.add(n.*(2*n-1))
    }
    val diff  = ArrayBuffer.empty[BigInt]

    arrayTriangle.foreach{
      elm=>
        if(arrayHexagonal.contains(elm)&&arrayPentagonal.contains(elm))
          diff.append(elm)
    }
    println(diff.last)


    val endTime = new Date().getTime
    println("time used  = "+(endTime - startTime))
  }
}
